{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-edit-contact/add-edit-contact.component.css","webpack:///./src/app/add-edit-contact/add-edit-contact.component.html","webpack:///./src/app/add-edit-contact/add-edit-contact.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-list/contact-list.component.css","webpack:///./src/app/contact-list/contact-list.component.html","webpack:///./src/app/contact-list/contact-list.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/contact.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".contact-form {\\r\\n    padding: 2rem;\\r\\n    border: 1px solid #ccc;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <h2 *ngIf=\\\"mode==='add'\\\">Add Contact</h2>\\n    <h2 *ngIf=\\\"mode==='edit'\\\">Edit Contact</h2>\\n    <hr/>\\n    <form class=\\\"contact-form\\\" #contactForm=\\\"ngForm\\\">\\n        <input type=\\\"hidden\\\" class=\\\"form-control\\\" id=\\\"id\\\" [(ngModel)]=\\\"contactDetails.id\\\" name=\\\"id\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">First Name</label><span class=\\\"text-danger\\\"> (Required)</span>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"contactDetails.fname\\\" name=\\\"fname\\\" \\n          required pattern=\\\"^[a-zA-Z]*\\\" #fname=\\\"ngModel\\\">\\n            <div *ngIf=\\\"fname.errors && (fname.dirty || fname.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!fname.errors.required\\\">\\n                    First name is required!\\n                </div>   \\n                <div [hidden]=\\\"!fname.errors.pattern\\\">\\n                    Please enter valid First Name!\\n                </div>                           \\n            </div>\\n        </div>\\n   \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Last Name</label><span class=\\\"text-danger\\\"> (Required)</span>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lName\\\" [(ngModel)]=\\\"contactDetails.lName\\\" name=\\\"lName\\\"\\n            required pattern=\\\"^[a-zA-Z]*\\\"  #lName=\\\"ngModel\\\">\\n            <div *ngIf=\\\"lName.errors && (lName.dirty || lName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!lName.errors.required\\\">\\n                    Last name is required!\\n                </div>   \\n                <div [hidden]=\\\"!lName.errors.pattern\\\">\\n                    Please enter valid Last Name!\\n                </div>                           \\n            </div>            \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Email : </label><span class=\\\"text-danger\\\"> (Required)</span>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailAddress\\\" [(ngModel)]=\\\"contactDetails.emailAddress\\\" name=\\\"emailAddress\\\"\\n            required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"  #emailAddress=\\\"ngModel\\\">\\n            <div *ngIf=\\\"emailAddress.errors && (emailAddress.dirty || emailAddress.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!emailAddress.errors.required\\\">\\n                    Email is required!\\n                </div>   \\n                <div [hidden]=\\\"!emailAddress.errors.pattern\\\">\\n                    Please enter valid email address!\\n                </div>                           \\n            </div>            \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Phone Number</label><span class=\\\"text-danger\\\"> (Required)</span>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"contactDetails.phone\\\" name=\\\"phone\\\"\\n            required pattern=\\\"[789][0-9]{9}\\\" #phone=\\\"ngModel\\\">\\n            <div *ngIf=\\\"phone.errors && (phone.dirty || phone.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!phone.errors.required\\\">\\n                     Phone Number is required!\\n                </div>   \\n                <div [hidden]=\\\"!phone.errors.pattern\\\">\\n                    Please enter valid Phone Number!\\n                </div>                           \\n            </div>            \\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n           <label><input type=\\\"checkbox\\\" id=\\\"statusEnabled\\\" [(ngModel)]=\\\"contactDetails.statusEnabled\\\" name=\\\"statusEnabled\\\">Status : Active/Inactive</label>\\n        </div>        \\n        <hr/>\\n        <button *ngIf=\\\"mode==='add'\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSave(contactDetails)\\\" [disabled]=\\\"!contactForm.form.valid\\\">Save</button> \\n        <button *ngIf=\\\"mode==='edit'\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onEdit(contactDetails)\\\" [disabled]=\\\"!contactForm.form.valid\\\">Edit</button>&nbsp;&nbsp;\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancelAddEdit()\\\">Cancel</button>\\n    </form>\\n</div>    \"","import { Component, OnInit } from '@angular/core';\nimport {Contact} from '../contact';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {ContactService} from '../contact.service';\n@Component({\n  selector: 'app-add-edit-contact',\n  templateUrl: './add-edit-contact.component.html',\n  styleUrls: ['./add-edit-contact.component.css']\n})\nexport class AddEditContactComponent implements OnInit {\n  mode: string;\n  contactDetails: Contact;\n  contactList = [];\n  constructor(private router: Router, private activateRoute: ActivatedRoute, private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.contactList = this.contactService.getContactList();\n    this.activateRoute.queryParams.subscribe(params => {\n      this.mode = params.mode;\n      if (this.mode === 'edit') {\n        this.contactDetails = new Contact(params.contactId , '', '', '', null, false);\n        const details = this.contactService.getContactDetails(params.contactId);\n        this.contactDetails.fname = details.firstName;\n        this.contactDetails.lName = details.lastName;\n        this.contactDetails.emailAddress = details.email;\n        this.contactDetails.phone = details.phoneNumber;\n        this.contactDetails.statusEnabled = details.status;\n      } else {\n        const id = parseInt(this.contactList[this.contactList.length - 1].id) + 1;\n        this.contactDetails = new Contact(id.toString() , '', '', '', null, false);\n      }\n   });\n  }\n\n  onSave(contactDetails) {\n    this.contactService.addContact(contactDetails);\n    this.router.navigate([''], { queryParams: { mode: 'add' }});\n  }\n\n  onEdit(contactDetails) {\n    this.contactService.editContact(contactDetails);\n    this.router.navigate([''], { queryParams: { mode: 'edit' }});\n  }\n\n  cancelAddEdit() {\n    this.router.navigate(['']);\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>  \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { AddEditContactComponent } from './add-edit-contact/add-edit-contact.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ContactService } from './contact.service';\nimport { HttpModule } from '@angular/http';\n\n\nconst appRoutes: Routes = [\n  { path: 'contact-list', component: ContactListComponent },\n  { path: 'addEditContact', component: AddEditContactComponent },\n  { path: '', redirectTo: '/contact-list', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactListComponent,\n    AddEditContactComponent,\n    PageNotFoundComponent\n ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ContactService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".add-contact-btn {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.contact-list table td {\\r\\n    vertical-align: middle;\\r\\n}\"","module.exports = \"  <div class=\\\"container contact-list\\\">\\n      <h2 class=\\\"pull-left\\\">Contact List</h2>\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right add-contact-btn\\\" (click)=\\\"addEditContact('add')\\\">Add Contact</button>     \\n      <div class=\\\"clearfix\\\"></div>\\n      <hr/>\\n      <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"hidden\\\">Id</th>\\n              <th>First Name</th>\\n              <th>Last Name</th>\\n              <th>Email</th>\\n              <th>Phone Number</th>\\n              <th>Status</th>\\n              <th colspan=\\\"2\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let contact of contactList\\\">\\n              <td class=\\\"hidden\\\">{{contact.id}}</td>\\n              <td>{{contact.firstName}}</td>\\n              <td>{{contact.lastName}}</td>\\n              <td>{{contact.email}}</td>\\n              <td>{{contact.phoneNumber}}</td>\\n              <td>{{contact.status === true ? \\\"Active\\\": \\\"Inactive\\\" }}</td>\\n              <td><button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"addEditContact('edit', contact.id)\\\">Edit</button></td>\\n              <td><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteContact(contact.id)\\\">Delete</button></td>\\n            </tr>\\n          </tbody>\\n        </table>      \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {Contact} from '../contact';\nimport { ContactService } from '../contact.service';\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n  contactList = [];\n  constructor(private router: Router, private activateRoute: ActivatedRoute, private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.contactList =   this.contactService.getContactList();\n  }\n\n  addEditContact(mode, contactId?) {\n    if (contactId) {\n      this.router.navigate(['addEditContact'], { queryParams: { mode: mode, contactId: contactId}});\n    } else {\n      this.router.navigate(['addEditContact'], { queryParams: { mode: mode}});\n    }\n  }\n\n  deleteContact(contactId) {\n    if (confirm('Are you sure you want to delete this contact?')) {\n      const index = this.contactList.findIndex(obj => obj.id === contactId);\n      this.contactList.splice(index, 1);\n    } else {\n      return false;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n    url = 'localapi/mock-contact-list.json';\r\n    contactList = [\r\n        {id: '1', firstName: 'john', lastName: 'Doe', email: 'johndoe@gmail.com', phoneNumber: 9623818555, status: true},\r\n        {id: '2', firstName: 'Mary', lastName: 'pas', email: 'marry@gmail.com', phoneNumber: 9623818555, status: true},\r\n        {id: '3', firstName: 'mark', lastName: 'vissley', email: 'markvissley@gmail.com', phoneNumber: 9623818555, status: false},\r\n        {id: '4', firstName: 'jack', lastName: 'dooley', email: 'jack@gmail.com', phoneNumber: 9623818555, status: false}\r\n      ];\r\n\r\n    constructor() { }\r\n\r\n    getContactList(): any {\r\n        return this.contactList;\r\n    }\r\n\r\n    getContactDetails(contactId) {\r\n        return this.contactList.find(function (obj) { return obj.id === contactId; });\r\n       }\r\n\r\n    addContact(contactDetails) {\r\n        this.contactList.push({id: contactDetails.id, firstName: contactDetails.fname,\r\n            lastName: contactDetails.lName, email: contactDetails.emailAddress,\r\n            phoneNumber: contactDetails.phone, status: contactDetails.statusEnabled});\r\n    }\r\n\r\n    editContact(contactDetails) {\r\n        const index = this.contactList.findIndex(obj => obj.id === contactDetails['id']);\r\n        this.contactList[index].firstName =  contactDetails['fname'];\r\n        this.contactList[index].lastName =  contactDetails['lName'];\r\n        this.contactList[index].email =  contactDetails['emailAddress'];\r\n        this.contactList[index].phoneNumber =  contactDetails['phone'];\r\n        this.contactList[index].status =  contactDetails['statusEnabled'];\r\n    }\r\n}\r\n","export class Contact {\n    constructor(\n        public id: any,\n        public fname: string,\n        public lName: string,\n        public emailAddress: string,\n        public phone: number,\n        public statusEnabled: boolean\n      ) {\n          this.id = id;\n          this.fname = fname;\n          this.lName = lName;\n          this.emailAddress = emailAddress;\n          this.phone = phone;\n          this.statusEnabled = statusEnabled;\n       }\n}\n","module.exports = \"<div class=\\\"container contact-list\\\">\\n  <h2>Page Not Found</h2>\\n  <hr/>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"navigateToHomePage('add')\\\">Navigate to home page</button>         \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html'\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateToHomePage() {\n    this.router.navigate(['contact-list']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}